#!/usr/bin/env groovy

pipeline {
    agent none

    environment {
        MATTERMOST_DESKTOP_WINDOWS_PFX_PASSWORD = credentials('mattermost-desktop-windows-pfx-password')
    }
    stages {
        stage('Build Windows/Linux') {
            agent any
            steps {
                echo 'Building Mattermost Desktop App'
                sh 'rm -rf release'
                sh 'npm install'
                sh 'npm run build'

                echo 'Packaging for Linux'
                sh 'npm run package:linux'
                sh 'mv release/mattermost-desktop-*-ia32.tar.gz  release/tmp-linux-ia32.tar.gz'
                sh 'mv release/mattermost-desktop-*.tar.gz release/mattermost-desktop-linux-x64.tar.gz'
                sh 'mv release/tmp-linux-ia32.tar.gz release/mattermost-desktop-linux-ia32.tar.gz'
                sh 'mv release/mattermost-desktop_*_i386.deb release/mattermost-desktop-linux-i386.deb'
                sh 'mv release/mattermost-desktop_*_amd64.deb  release/mattermost-desktop-linux-amd64.deb'

                echo 'Packaging for Windows'
                sh 'npm run package:windows'

                echo 'Downloading codesigning certificate'
                withAWS(credentials:'mattermost-certificates-s3-bucket') {
                    s3Download(file:'mattermost-desktop-windows.pfx',bucket:'mattermost-certificates',path:'mattermost-desktop-windows.pfx',force:true)
                }

                // TODO: for debugging. remove me
                sh 'ls -la'

                echo 'Code Signing for Windows 32bit'
                sh """
                  unzip -d codesign-win32 release/Mattermost-*-ia32-win.zip
                  cd codesign-win32/Mattermost-*-win32
                  osslsigncode -pkcs12 ../../mattermost-desktop-windows.pfx -pass $MATTERMOST_DESKTOP_WINDOWS_PFX_PASSWORD -n 'Mattermost Desktop' -i https://mattermost.com -t http://timestamp.verisign.com/scripts/timstamp.dll -h sha2 -in Mattermost.exe -out Mattermost.exe
                  cd ../
                  zip -r ../release/mattermost-desktop-win32.zip Mattermost-*-win32/*
                  cd ../
                  rm -Rf codesign-win32
                """
                echo 'Signed Windows 32bit build is available at release/mattermost-desktop-win32.zip'

                echo 'Code Signing for Windows 64bit'
                sh """
                  unzip -d codesign-win64 release/Mattermost-*-win.zip
                  cd codesign-win64/Mattermost-*-win64
                  osslsigncode -pkcs12 ../../mattermost-desktop-windows.pfx -pass $MATTERMOST_DESKTOP_WINDOWS_PFX_PASSWORD -n 'Mattermost Desktop' -i https://mattermost.com -t http://timestamp.verisign.com/scripts/timstamp.dll -h sha2 -in Mattermost.exe -out Mattermost.exe
                  cd ../
                  zip -r ../release/mattermost-desktop-win64.zip Mattermost-*-win64/*
                  cd ../
                  rm -Rf codesign-win64
                """
                echo 'Signed Windows 64bit build is available at release/mattermost-desktop-win64.zip'

                echo 'Code Signing for Windows 32bit Installer'
                sh """
                  mv release/win-ia32/Mattermost\\ Setup\\ *-ia32.exe release/mattermost-setup-win32.exe
                  osslsigncode -pkcs12 mattermost-desktop-windows.pfx -pass $MATTERMOST_DESKTOP_WINDOWS_PFX_PASSWORD -n 'Mattermost Desktop' -i https://mattermost.com -t http://timestamp.verisign.com/scripts/timstamp.dll -h sha2 -in release/mattermost-setup-win32.exe -out release/mattermost-setup-win32.exe
                """
                echo 'Signed Windows 32bit Installer is available at release/mattermost-setup-win32.exe'

                echo 'Code Signing for Windows 32bit Installer'
                sh """
                  mv release/win/Mattermost\\ Setup\\ *.exe release/mattermost-setup-win64.exe
                  osslsigncode -pkcs12 mattermost-desktop-windows.pfx -pass $MATTERMOST_DESKTOP_WINDOWS_PFX_PASSWORD -n 'Mattermost Desktop' -i https://mattermost.com -t http://timestamp.verisign.com/scripts/timstamp.dll -h sha2 -in release/mattermost-setup-win64.exe -out release/mattermost-setup-win64.exe
                """
                echo 'Signed Windows 32bit Installer is available at release/mattermost-setup-win32.exe'

                // TODO: archive artifacts
            }
        }
        stage('Build MacOS') {
            agent {
                node {
                    label 'macOS'
                    customWorkspace '/Users/administrator/go/src/github.com/mattermost/desktop'
                }
            }
            steps {
                withEnv(['PATH+NPM=/usr/local/bin']) {
                  echo 'Unlocking the keychain'
                  sh 'security -v unlock-keychain -p $(cat /Users/administrator/keychain-password.txt)'

                  echo 'Building Mattermost Desktop App'
                  sh 'rm -rf release'
                  sh 'npm install'
                  sh 'npm run build'

                  echo 'Packaging for MacOS'
                  sh 'npm run package:mac'

                  // TODO: archive artifacts
                }
            }
        }
    }
}
